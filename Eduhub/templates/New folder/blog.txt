
=============== Url =============================

   #---- Blog Section --------------
    path('BlogListPage-Section',views.BlogListPage,name="BlogListPage"),
    path('BlogPage-Section',views.blog_page,name="blog_page"),
    path('Blog-Details/<pk>',views.blog_details,name="blog_details"),
    path('Blog-Edit/<pk>',views.blog_details_edit,name="blog_details_edit"),
    path('Blog-Remove/<pk>',views.blog_remove,name="blog_remove"),




   ====================== Views=====================
# Blog section --------------------
    
def BlogListPage(request):
    if 'uid' in request.session:
        if request.session.has_key('uid'):
            uid = request.session['uid']
        else:
            return redirect('/')
        
        blogConent = BlogModel.objects.all().order_by('blog_create_date')

        return render(request,'admin/BlogList.html',{'blogConent':blogConent})
    else:
        return redirect('login_page')

    
def blog_page(request):
    if 'uid' in request.session:
        if request.session.has_key('uid'):
            uid = request.session['uid']
        else:
            return redirect('/')
        
        if request.method == 'POST':
            form = BlogForm(request.POST)
            if form.is_valid():
                form.save()
                return redirect('blog_page')  
        else:
            form = BlogForm()
        
        return render(request,'admin/Blog.html',{'form': form})
    else:
        return redirect('login_page')
    

def blog_details(request,pk):
    if 'uid' in request.session:
        if request.session.has_key('uid'):
            uid = request.session['uid']
        else:
            return redirect('/')  
         
        blogDetails = BlogModel.objects.get(id=pk)
        return render(request,'admin/BlogDetails.html',{'blogDetails':blogDetails})
    else:
        return redirect('login_page')


def blog_details_edit(request, pk):
    if 'uid' in request.session:
        if request.session.has_key('uid'):
            uid = request.session['uid']
        else:
            return redirect('/')  

        blog = BlogModel.objects.get(id=pk)

        if request.method == 'POST':
            form = BlogEditForm(request.POST, instance=blog)
            if form.is_valid():
                form.save()
                return redirect('blog_details_edit', pk=pk)
        else:
            form = BlogEditForm(instance=blog, initial={'blog_title': blog.blog_title})

        return render(request, 'admin/BlogEdit.html', {'blogEdit': blog, 'form': form})
    else:
        return redirect('login_page')


def blog_remove(request,pk):
    if 'uid' in request.session:
        if request.session.has_key('uid'):
            uid = request.session['uid']
        else:
            return redirect('/')
        
         
        blogRemove = BlogModel.objects.get(id=pk)
        blogRemove.delete()

        blogConent = BlogModel.objects.all().order_by('blog_create_date')

        return render(request,'admin/BlogList.html',{'blogConent':blogConent})
    else:
        return redirect('login_page')
        

# Blog Section end ----------------------
    